{
    "collab_server" : "",
    "contents" : "library(secr)\nlibrary(scr)\nlibrary(spatstat)\n\n## A required package.\n#library(spatstat)\n\n## Computes the negative log-likelihood function for a simple SCR\n## model.\n##\n## Arguments are as follows:\n##\n## pars: A vector of parameters at which to compute the\n##       log-likelihood. They should appear in the following order:\n##       (1) log(D), (2) logit(g0), (3) log(sigma).\n##\n## capt: Matrix of capture histories.\n##\n## traps: Matrix containing x- and y-coordinates of trap locations.\n##\n## mask: Matrix containing x- and y-coordinates of mask point\n##       locations. Needs to have attribute 'area', providing the area\n##       of a single pixel.\nscr.nllRAW <- function(pars, capt, traps, mask){\n  ## Unlinking parameters\n  D <- exp(pars[1])\n  g0 <- plogis(pars[2])\n  sigma <- exp(pars[3])\n  ## Number of animals detected.\n  n <- nrow(capt)\n  ## Number of traps.\n  n.traps <- nrow(traps)\n  ## Number of mask points.\n  n.mask <- nrow(mask)\n  ## Area of a single mask pixel.\n  a <- attr(mask, \"area\")\n  ## Constructing a distance matrix. The element (i, j) gives the\n  ## distance between the ith mask point and the jth trap.\n  mask.dists <- crossdist(mask[, 1], mask [, 2],\n                          traps[, 1], traps[, 2])\n  ## Constructing a detection probability matrix. The element (i, j)\n  ## gives the probability of an animal located at the ith mask\n  ## point being detected at the jth trap.\n  mask.probs <- g0*exp(-mask.dists^2/(2*sigma^2))\n  ## Constructing a detection probability vector. The ith element\n  ## gives the probability of an animal located at the ith mask\n  ## point being detected by *at least one* trap.\n  p.avoid <- apply(1 - mask.probs, 1, prod)\n  p.det <- 1 - p.avoid\n  ##Calculating likelihood contribution due to each\n  ## detected animal's capture history.\n  f.capt <- numeric(n)\n  for (i in 1:n){\n    ## Calculating the log-probability of the animal's capture\n    ## history, conditional on being at the jth mask point.\n    log.f.capt.given.s <- numeric(n.mask)\n    for (j in 1:n.mask){\n      log.f.capt.given.s[j] <- sum(dbinom(capt[i, ], 1, mask.probs[j, ], log = TRUE))\n    }\n    ## Summing the probabilities over all mask points.\n    f.capt[i] <- sum(exp(log.f.capt.given.s))\n  }\n  ## Log-likelihood contribution from all capture histories\n  ## calculated by the log of the sum of the individual likelihood\n  ## contributions.\n  log.f.capt <- sum(log(f.capt + .Machine$double.xmin))\n  ## Calculating the effective survey area (not used in likelihood here).\n  esa <- a*sum(p.det)\n  ## Log-likelihood contribution from the number of animals\n  ## detected.\n  log.f.n <- dpois(n, D*esa, log = TRUE)\n  ## Overall log-likelihood. I can never remember where the last bit\n  ## comes from, but you need it.\n  ll <- log.f.n + log.f.capt - n*log(sum(p.det))\n  ## Returning negative log-likelihood.\n  -ll\n}\n\n## Loading some data to test things out.\nload(\"test-data.RData\")\n\n## Some start values: D = 0.1, g0 = 0.5, sigma = 50.\npar.start <- c(log(0.1), qlogis(0.5), log(50))\n\nfit <- optim(par.start, scr.nllRAW, capt = test.data$bin.capt, traps = test.data$traps, mask = test.data$mask)\n## Unlinking estimates.\n## D:\nexp(fit$par[1])\n## g0:\nplogis(fit$par[2])\n## sigma:\nexp(fit$par[3])\n\n#==========================================================================#\n#==========================================================================#\n#==========================================================================#\n#==========================================================================#\n\ntestcapt = test.data$bin.capt\ntesttrap = test.data$traps\ntestmask = test.data$mask\n\ntesttrap = data.frame(cbind(1:nrow(testtrap), testtrap))\ncolnames(testtrap) = c(\"trapID\", \"x\", \"y\")\ntesttrap = read.traps(data = testtrap, detector = \"proximity\")\n\ntestmask = make.mask(testtrap)#, type = \"trapbuffer\", buffer = 10 * 5)\n\ntestcapt = toCapthist(testcapt)\ntestcapt = make.capthist(testcapt, testtrap, fmt = \"trapID\")\n\ntestfit = secr.fit(testcapt, mask = testmask, detectfn = \"HN\")\n\n\n\n#==========================================================================#\n#==========================================================================#\n#==========================================================================#\n#==========================================================================#\n\n\nfit <- optim(par.start, scr.nll, caps = test.data$bin.capt, traps = test.data$traps, mask = test.data$mask)\n## Unlinking estimates.\n## D:\nexp(fit$par[1])\n## g0:\nplogis(fit$par[2])\n## sigma:\nexp(fit$par[3])\n",
    "created" : 1501465676402.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "214125808",
    "id" : "FC817EBB",
    "lastKnownWriteTime" : 1502325324,
    "last_content_update" : 1502325324,
    "path" : "~/Business/University/Master's/Project/Likelihood/Likelihood-working.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}